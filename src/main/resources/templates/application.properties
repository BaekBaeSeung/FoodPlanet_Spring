spring.application.name=foodplanet
# 설정 포트 번호를 지정합니다.(기본값 : 8080)
server.port=8888
# for Automatic Restart 기능 활성화
spring.devtools.restart.enabled=true
# live reload 기능 활성화
spring.devtools.livereload.enabled=true
# thymeleaf cache 기능 off
spring.thymeleaf.cache=false
# mysql database 설정
# Mysql 워크 벤치에서 다음 데이터베이스를 생성합니다.
# foodplanet은 데이터 베이스 이름입니다.
# create database foodplanet;
spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver
spring.datasource.url=jdbc:mysql://localhost:3306/foodplanet?serverTimezone=UTC&characterEncoding=UTF-8
spring.datasource.username=root
spring.datasource.password=mysql
#실행되는 쿼리 콘솔 출력
spring.jpa.properties.hibernate.show_sql=true
#콘솔창에 출력되는 쿼리를 가독성이 좋게 포맷팅
spring.jpa.properties.hibernate.format_sql=true
#쿼리에 물음표로 출력되는 바인드 파라미터 출력
logging.level.org.hibernate.type.descriptor.sql=trace
spring.jpa.hibernate.ddl-auto=create
#spring.jpa.database-platform=org.hibernate.dialect.Oracle10gDialect
spring.jpa.database-platform=org.hibernate.dialect.MySQL8Dialect
# 업로드 가능한 파일의 최대 파일 용량(사이즈)
spring.servlet.multipart.max-file-size=1MB
# 단위 요청당 가능한 최대 파일의 크기
spring.servlet.multipart.max-request-size=100MB
# 상품 이미지가 업로드 되는 디스크 상의 경로
productImageLocation=c:/shop/image
# 리소스 업로드 경로
uploadPath=file:///c:/shop/
# 페이징 처리시 1개의 페이지에 보여줄 행 갯수
pageSize=3
# 하단에 보여줄 최대 페이지 번호의 갯수
pageCount=5
# CORS 설정
###
spring.mvc.cors.allowed-origins=http://localhost:3000
spring.mvc.cors.allowed-methods=GET,PUT,POST,DELETE
spring.mvc.cors.allow-credentials=true